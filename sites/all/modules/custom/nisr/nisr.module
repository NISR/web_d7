<?php

/**
 * @file
 * Global configuration
 */
DEFINE('NISR_MODULE_PATH',drupal_get_path('module', 'nisr'));

drupal_add_css(NISR_MODULE_PATH. '/nisr.css', array('group' => CSS_THEME, 'weight' => '9999','every_page' => FALSE));

module_load_include('inc','nisr','utils');

/*
 * Implements hook_block_info()
 */
function nisr_block_info(){
	$weight = 100;
	$blocks['featured_indicators_prognoz'] = array(
		'info' => t('Featured indicators from the Prognoz database'),
		'weight' => $weight,
		'cache' => DRUPAL_NO_CACHE,
		);
	$blocks['custom_search'] = array(
		'info' => t('Custom search box'),
		'weight' => -99,
		'cache' => DRUPAL_NO_CACHE,	
	);
	
	$blocks['contact_form'] = array(
		'info' => t('Contact form'),
		'cache' => DRUPAL_NO_CACHE,	
	);
	$blocks['last_update_date'] = array(
		'info' => t('Last update Date'),
		'cache' => DRUPAL_NO_CACHE,	
	);
					
	return $blocks;	
}

/*
 * Implements hook_block_view()
 */
function nisr_block_view($delta = ''){
	switch($delta){
		case 'featured_indicators_prognoz' :
			$url = '';
			$block['title'] = '';
			$block['content'] = _fetch_indicators($url);
			break;
		case 'custom_search':
			$block['title'] = '';
			$block['content'] = drupal_get_form('custom_search_form');
			break;
		case 'contact_form' :
			module_load_include('inc','contact','contact.pages');
			$block['title'] = '';
			$block['content'] = drupal_get_form('contact_site_form');
			break;
		case 'last_update_date':
			$block['title'] = '';
			$block['content'] = get_lastUpdate_date();
			break;	
		default:
			break;
	}
	
	// Feed the dynamically declared blocks from document subjects vocabulary with view embed display
	$voc = taxonomy_vocabulary_machine_name_load('document_subjects');	
	$subjects = taxonomy_get_tree($voc->vid);
	
	foreach($subjects as $subject){
		if($delta == str_replace(' ','_',strtolower($subject->name))){
			module_load_include('inc','nisr','utils');
			$view =  get_embed_view('publications_search','documents',array($subject->tid));			
			$block['title'] = '';
			$block['content'] = $view['result'];
		}
	} 	
		
	return $block;
}

/**
 * Implementation of hook_context_load_alter()
 */
function nisr_context_load_alter(&$context) {
  if($context->name == 'search') {
    $context->reactions['block']['blocks']['nisr-custom_search']['weight'] = -99;
  }
  if($context->name == 'frontpage_content') {
    $context->reactions['block']['blocks']['nodesinblock-0']['weight'] = -100;
  }
}

/**
 * Implements hook_menu().
 */
function nisr_menu(){
	$items = array();
	
	// Home button
	$items['home'] = array(
	 'title' => 'Home',
 	 'title callback' => 'get_home_menu_item',	
 	 'page callback' => 'drupal_goto',
 	 'page arguments' => array('<front>'),
	 'access callback' => TRUE,
	 'type' => MENU_NORMAL_ITEM,
    'menu_name' => 'main-menu',	
    'weight' => -50,
	);
	// Custom Administration menu items
	// Advertisements
  	$items['admin/content/advertisements/add'] = array(
    'title' => 'Add Advertisement',
    'page callback' => 'node_add',
    'page arguments' => array('advertisement'),
    'access arguments' => array('administer content'),
    'weight' => 10,
    'file path' => drupal_get_path('module', 'node'), 
    'file' => 'node.pages.inc',
    'type' => MENU_LOCAL_ACTION,
    'menu_name' => 'management',
  	);	
  	
  	// Press items
  	$items['press'] = array(
		'title' => 'Press',
		'page callback' => 'drupal_goto',
		'page arguments' => array('press/news'),
		'access callback' => TRUE,  	
  	);
  	
  	$items['admin/content/press/news/add'] = array(
    'title' => 'Add News story',
    'page callback' => 'node_add',
    'page arguments' => array('story'),
    'access arguments' => array('administer content'),
    'file path' => drupal_get_path('module', 'node'), 
    'file' => 'node.pages.inc',
    'type' => MENU_LOCAL_ACTION,
  	);	
  	$items['admin/content/press/press-release/add'] = array(
    'title' => 'Add Press release',
    'page callback' => 'node_add',
    'page arguments' => array('press_release'),
    'access arguments' => array('administer content'),
    'file path' => drupal_get_path('module', 'node'), 
    'file' => 'node.pages.inc',
    'type' => MENU_LOCAL_ACTION,
  	);	  	
  	
	// Notices	

  	$items['admin/content/notices/job-advert/add'] = array(
    'title' => 'Add job advertisement',
    'page callback' => 'node_add',
    'page arguments' => array('job_advert'),
    'access arguments' => array('administer content'),
    'file path' => drupal_get_path('module', 'node'), 
    'file' => 'node.pages.inc',
    'type' => MENU_LOCAL_ACTION,
  	);
  	$items['admin/content/notices/tender-advert/add'] = array(
    'title' => 'Add tender advertisement',
    'page callback' => 'node_add',
    'page arguments' => array('tender_advert'),
    'access arguments' => array('administer content'),
    'file path' => drupal_get_path('module', 'node'), 
    'file' => 'node.pages.inc',
    'type' => MENU_LOCAL_ACTION,
  	);  	
  	
  	// Profile menu items
	$items['login'] = array(
		'title' => 'Login',
    	'page callback' => 'drupal_goto',
    	'page arguments' => array('user/login'),
    	'access callback' => 'user_is_anonymous',
    	'weight' => -20,
    	'menu_name' => 'menu-profile-menu',
	);

	$items['register'] = array(
		'title' => 'Register',
    	'page callback' => 'drupal_goto',
    	'page arguments' => array('user/register'),
    	'access callback' => 'user_is_anonymous',
    	'weight' => -15,
    	'menu_name' => 'menu-profile-menu',
	);
		
	$items['profile'] = array(
		'title' => 'My profile',
    	'page callback' => '_profile_view',
    	'access callback' => 'user_is_logged_in',
    	'weight' => -20,
    	'menu_name' => 'menu-profile-menu',
	);
	
	$items['logout'] = array(
		'title' => 'Logout',
    	'page callback' => 'drupal_goto',
    	'page arguments' => array('user/logout'),
    	'access callback' => 'user_is_logged_in',
    	'weight' => -10,
    	'menu_name' => 'menu-profile-menu',
	);		
	
	$items['ServiceLogin'] = array(
		'title' => 'Login',
		'page callback' => 'serviceLogin',
		'access callback' => TRUE,	
	
	);

	$items['ServiceRegister'] = array(
		'title' => 'Register',
		'page callback' => 'serviceRegister',
		'access callback' => TRUE,	
	
	);
		
	$items['services/visa'] = array(
		'title' => 'Visa',
		'page callback' => 'nisr_user_is_logged_in',
		'page arguments' => array('visa'),
		'access callback' => TRUE,
    	'type' => MENU_CALLBACK,
	);
	
	
	return $items;
}


/*
 * Implements hook_entity_presave()
 */
function nisr_entity_presave($entity,$type){
	// Save update timestamp
	variable_set('nisr_last_update_timestamp',REQUEST_TIME);
}

/*
 * Implements hook_entity_view()
 */
function nisr_entity_view($entity, $type, $view_mode, $langcode){
  $breadcrumb = array();
  $path = explode('/',request_path());	
  
  $breadcrumb[] = l(t('Home'),'<front>');
  
  if($type == 'node' && $view_mode == 'full'){
		switch($entity->type) {
			case 'job_advert' :
				$breadcrumb[] = l(t('Jobs'),'notices/jobs');	
				break;
			case 'tender_advert' :
				$breadcrumb[] = l(t('Tenders'),'notices/tenders');	
				break;
			case 'story' :
				$breadcrumb[] = l(t('Press'),'press');
				$breadcrumb[] = l(t('News'),'press/news');
				break;
			case 'press_release' :
				$breadcrumb[] = l(t('Press'),'press');
				$breadcrumb[] = l(t('Press releases'),'press/press-releases');
				break;
			case 'page' :
				$paths = explode("/", request_uri());
				$path_alias = "";
				//Get rid of first and last /
				unset($paths[0]);
				array_pop($paths);
				foreach($paths as $path){
					($path_alias) ? $path_alias.= '/' . $path : $path_alias = $path;
					$normal_path = drupal_get_normal_path($path_alias);
					$item = menu_get_item($normal_path);
					$breadcrumb[]  = l($item['title'],$path_alias);
				}				
				break;
			default:
				break;
		} 
		//Finalising...
		//$breadcrumb[] = drupal_get_title();	
		drupal_set_breadcrumb($breadcrumb);	 	
  }
}
/*
 * Implements hook_form_FORM_ID_alter()
 */
function nisr_form_taxonomy_form_term_alter(&$form,&$form_state,$form_id){
	//Disable Wysiwyg editor
	$form['description']['#wysiwyg'] = FALSE;
	return $form;	
}

/*
 * Implements hook_menu_alter()
 */
function nisr_menu_alter(&$items) {
  // Re-order messages admin menu item
  if (!empty($items['admin/content/message'])) $items['admin/content/message']['weight'] = 48;
  // Re-order scheduler admin menu item
  if (!empty($items['admin/content/scheduler'])) $items['admin/content/scheduler']['weight'] = 49;
  // Content admin menu item
  if (!empty($items['admin/content'])) $items['admin/content']['weight'] = 50;
}

/*
 * Implements hook_preprocess_page()
 */
function nisr_preprocess_page(&$variables){
	$path = arg();
	if(in_array($path[0],array('ServiceLogin','ServiceRegister'))){
		$variables['theme_hook_suggestions'][] = 'service_gateway';
	}
}
/*
 * Implements hook_theme()
 */
function nisr_theme($existing, $type, $theme, $path){
	$items['service_gateway'] = array(
		'render element' => 'page',
		'template' => 'service_gateway',
		'path' => drupal_get_path('module','nisr') . '/theme',
	);
	$items['nisr_login_form'] = array(
        'render element' => 'form',
        'template' => 'login',
        'path' => drupal_get_path('module', 'nisr') . '/theme',
    );

    $items['nisr_register_form'] = array(
        'render element' => 'form',
        'template' => 'register',
        'path' => drupal_get_path('module', 'nisr') . '/theme',
    );

    return $items;
	
}

/**
 * Implements hook_theme_registry_alter().
 */
function nisr_theme_registry_alter(&$theme_registry) {
    // Defined path to the current module.
    $theme_registry['file_formatter_table']['function'] = 'nisr_file_formatter_table';
    $module_path = drupal_get_path('module', 'nisr');
    // Find all .tpl.php files in this module's folder recursively.
    $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
    // Iterate through all found template file objects.
    foreach ($template_file_objects as $key => $template_file_object) {
        // If the template has not already been overridden by a theme.
        if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/theme/#', $theme_registry[$key]['theme path'])) {
            // Alter the theme path and template elements.
            $theme_registry[$key]['theme path'] = $module_path;
            $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
            $theme_registry[$key]['type'] = 'module';
        }
    }
    
}

/**
 * Implements hook_user_login
 */
function nisr_user_login(&$edit, $account) {
	global $user;
	if(!profile2_load_by_user($user,'main')){
		$profile = profile2_create(array('type' => 'main','uid' => $user->uid));
		profile2_save($profile);
	}
}


function nisr_twitter_pull_blocks() {
  return array(
    0 => (object) array(
      'delta' => 'twitter_nisr_0',
      'tweetkey' => 'statisticsrw',
      'title' => 'Twitter',
      'name'  => 'NISR Tweet Feed',    
      'number_of_items' => 4,
      'theme_key' => 'twitter_pull_listing',    
    )
  );
}


/*
 * Theme function used to override the file table display to add the download count
 * alongside the file name/description 
 */
function nisr_file_formatter_table(&$variables){
  $header = array(t('File'), t('Download count'));
  $rows = array();
  foreach ($variables['items'] as $delta => $item) {
    $result = db_select('download_count','dc')->fields('dc')->condition('fid', $item['fid'], '=')->condition('uid', 1, '<>')->execute();
    $dc = $result->rowCount();   
    
    $rows[] = array(
      theme('file_link', array('file' => (object) $item)) . ' (' . format_size($item['filesize']) . ')',
      $dc,
    );
  }

  return empty($rows) ? '' : theme('table', array('header' => $header, 'rows' => $rows,'attributes' => array('class' => array('col-md-12'),'style'=>'margin-bottom:20px;')));
} 

/*
 * Check if user is logged and redirect to custom login page if not 
 *
 * @return 
 *		Boolean
 */
function nisr_user_is_logged_in($service){
	if(!user_is_logged_in()){
		drupal_goto('ServiceLogin',array('query' => array('destination'=> 'services/' . $service)));
	}else{
		return views_embed_view($service,'embed_1');
	}
}

/*
 * Service login
 */
function serviceLogin(){
	if(!user_is_logged_in()){
		module_load_include('inc','nisr','nisr.authentication');
		return drupal_get_form('nisr_login_form');
	}
}

/*
 * Service Register
 */
function serviceRegister(){
	if(!user_is_logged_in()){
		module_load_include('inc','nisr','nisr.authentication');
		return drupal_get_form('nisr_register_form');
	}	
}
/*
 * Submit xml request to Prognoz WebAPi service
 * @param
 *		$url : the service url with parameters
 *	@return
 *	String containing the html formatted data or error message
 * 
 */
function _fetch_indicators($url){
	$request = 'request';
	
	$response = 'response';
	
	return _set_block_content($response);
}


function custom_search_form($form,$form_state){
	$form = array();
	
	$form['wrapper']['search-icon'] = array(
		'#markup' => "<i class='fa fa-search'></i>",
	);
	
	$form['wrapper']['search'] = array(
		'#type' => 'textfield',
		'#size' => 10,
		'#name' => 'search',
		'#attributes' => array('class' => array('form-control','input-search')),
	); 
	$form['wrapper']['actions']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Search'),
		'#attributes' => array('class' => array('btn-search')),
		'#prefix' => "<span class=''>",
		'#suffix' => '</span>',
	);
	
	return $form;	
}

function custom_search_form_validate($form,&$form_state){
	
}

function custom_search_form_submit($form,&$form_state){
	if(module_exists('google_cse')){
		drupal_goto('search/google/' . $form_state['input']['search']);
	}
}

/*
 * Get entities associated to a term 
 *  
 * @param
 *		$term : the term name
 *
 *	@return
 *		array of entity items added by other modules
 */
function entities_by_term($term){
	$entities = array();
	
	drupal_alter('entities_by_term',$entities,$term);
	
	return $entities;
}

/*
 * Callback for the image home menu item
 */
function get_home_menu_item(){
	return "<i class='fa fa-home'></i>";	
}

/*
 * Get Overall last update date
 */
function get_lastUpdate_date(){
	$date = FALSE;
	$date = variable_get('nisr_last_update_timestamp');
	($date) ? $date = date('l j F Y H:i',$date) : $date = FALSE;
	
	return "<p>" . t('Last update : ') . $date . "</p>";
}

/*
 * Callback for area edit menu item
 */
function term_goto($term_name){
	$terms = taxonomy_get_term_by_name(str_replace('-',' ',$term_name));
	$term = current($terms);
	
   $path = explode('/',request_path());	
	drupal_goto("taxonomy/term/$term->tid/edit",array('query' => array('destination' => $path[0] .'/' . $term_name)));
	
}

/*
 * Get children terms and/or various entities classified by a term
 *
 * @param
 *		string term_name
 *		string vocabulary
 *
 * @return
 *		renderable array
 *
 */
function term_page($term_name,$vocabulary = NULL){
	
	$terms = taxonomy_get_term_by_name(str_replace('-',' ',$term_name),$vocabulary);
	
	$term = current($terms);
	 
	$path = explode('/',request_path());	
	$content = array(
							'description' => array(
									'#markup' => $term->description,
									'#prefix' => "<div class='subject-description'>",
									'#suffix'=> '</div>',
							),	
				);
				
						
	$children_terms = taxonomy_get_children($term->tid);
	
	if(count($children_terms)){
		//Adjust box width dynamically
		(12 / count($children_terms)) >= 3 ? $width = 'col-md-' . (12 / count($children_terms)) : $width = 'col-md-3'; 
		$content['wrapper'] = array("#prefix" => "<div class='featured-boxes'>");			
		foreach($children_terms as $child_term){
			$child_term_name = get_label_dashed($child_term->name);
			$children[] = array(
									"#prefix" => "<div onclick=javascript:window.location.href='/" . $path[0] . "/" . $child_term_name . "' class='" . $width ."'><div class='featured-content featured-box'><div class='box-content'>",
									"#suffix" => "</div></div></div>",
									'title' => array(
														'#theme' => 'link',
														'#text'  => $child_term->name,
														'#path'  => "$path[0]/$child_term_name",
														'#options'=> array('attributes' => array('title' => ''),'html'=>TRUE),
														'#prefix'=> "<h4>",
														'#suffix'=> "</h4>",
														),
									
									'description' => array(
														'#markup' => text_summary($child_term->description,null,300),
														),					
																			
									);	
			}
		$content['wrapper']['children'] = $children;
	}else{
		// Show additional entities associated with this term if any
		$content['wrapper'] = array("#prefix" => "<div class=''>");	
		$content['wrapper']['entities'] = entities_by_term($term_name);		
	}	
	
	$content['wrapper']['#suffix'] = "</div>";
	
	// Set the breadcrumb
	// In the form  : Home > Statistical publications > Economy > Price and inflation
	$breadcrumb = array();
	$parent_terms = taxonomy_get_parents_all($term->tid);
	unset($parent_terms[0]); // Remove the first element including the term object
	   
   $breadcrumb[] = l(t('Home'),'<front>');
   $breadcrumb[] = l(get_label_formal($path[0]),$path[0]);
   foreach(array_reverse($parent_terms) as $parent){
   	$breadcrumb[] = l(t($parent->name),"$path[0]/" . get_label_dashed($parent->name));
   } 
   

   drupal_set_breadcrumb($breadcrumb);
   
   drupal_set_title($term->name);	
		
	return $content;
	
}
/*
 * XML response from Prognoz WS parsing function
 * @param
 *		$response : the reponse in xml format
 *	@return
 *	String containing the html formatted data
 */
function _set_block_content($response){
	return 'Some indicators';
}

/*
 *
 */
function _profile_view(){
	global $user;
	
	$profile = profile2_load_by_user($user->uid,'main');	
	
	drupal_set_title(t('My profile'));
	
	return profile2_view($profile);		
}

